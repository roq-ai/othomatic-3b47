generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model bailiff {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model has been renamed to 'Renamedcase' during introspection, because the original name 'case' is reserved.
model Renamedcase {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime        @default(now()) @db.Timestamp(6)
  updated_at       DateTime        @default(now()) @db.Timestamp(6)
  number           String
  principal_amount Float?
  user_id          String?         @db.Uuid
  user             user?           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  case_booking     case_booking[]
  case_contacts    case_contacts[]
  case_notes       case_notes[]

  @@map("case")
}

model case_booking {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  amount      Float?
  date        DateTime    @db.Timestamp(6)
  case_id     String      @db.Uuid
  Renamedcase Renamedcase @relation(fields: [case_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model case_contacts {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  case_id     String?      @db.Uuid
  contact_id  String?      @db.Uuid
  Renamedcase Renamedcase? @relation(fields: [case_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  contact     contact?     @relation(fields: [contact_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model case_notes {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  text        String?     @db.VarChar(255)
  case_id     String      @db.Uuid
  Renamedcase Renamedcase @relation(fields: [case_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model contact {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  name          String?         @db.VarChar(255)
  case_contacts case_contacts[]
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  bailiff     bailiff[]
  Renamedcase Renamedcase[]
}
